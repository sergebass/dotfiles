# shared configuration for all supported versions of tmux

set -g mouse on

# C-b is not acceptable -- Vim uses it
unbind C-b

# set-window-option -g xterm-keys on

# make cursor change shapes even under tmux (a workaround for neovim)
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Use both C-Space and M-Space to send tmux prefix (depending on the OS/GUI limitations)
# Press the prefix twice to send it through to the underlying application
set-option -g prefix M-Space
set-option -g prefix2 C-Space
bind-key M-Space send-prefix
bind-key C-Space send-prefix -2

bind r source-file ~/.tmux.conf \; display "tmux configuration reloaded!"

setw -g mode-keys vi

# clipboard management
set-option -s set-clipboard off

bind Escape copy-mode

bind Y run -b "tmux save-buffer - | xclip -in -selection clipboard"
bind P run -b "tmux set-buffer \"$(xclip -out -selection clipboard)\"; tmux paste-buffer"

unbind p
bind p paste-buffer

# bind P pipe-pane -o "cat >> ~/tmux-#W.log" \; display "Toggled logging to ~/tmux-#W.log"

bind S set-window-option synchronize-panes  # on/off toggle

# use these shortcuts to use current pane/window directory for new windows and panes
bind c new-window -c '#{pane_current_path}'
bind \ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

bind = select-layout tiled
bind | select-layout even-horizontal
bind _ select-layout even-vertical

bind-key -n M-, select-window -t -1
bind-key -n M-. select-window -t +1

bind-key -n M-Left select-window -t -1
bind-key -n M-Right select-window -t +1

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10

bind-key -n M-` last-window

bind-key -n M-S-Left select-window -t -1
bind-key -n M-S-Right select-window -t +1

bind-key -n M-< swap-window -t -1
bind-key -n M-> swap-window -t +1

bind-key -n M-Up swap-window -t -1
bind-key -n M-Down swap-window -t +1

bind-key M-1 swap-window -t 1
bind-key M-2 swap-window -t 2
bind-key M-3 swap-window -t 3
bind-key M-4 swap-window -t 4
bind-key M-5 swap-window -t 5
bind-key M-6 swap-window -t 6
bind-key M-7 swap-window -t 7
bind-key M-8 swap-window -t 8
bind-key M-9 swap-window -t 9

bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# pane rearrangemenet bindings, borrowed from https://stackoverflow.com/a/27450841
# "flipping the orientation of the current pane with the pane before it (in the ordering)"
bind M-f move-pane -t '.-'
bind M-r move-pane -h -t '.-'

# audio volume control (ALSA/Linux)
bind-key -n M-[ run "amixer set Master 5%-"
bind-key -n M-] run "amixer set Master 5%+"

# audio volume control (OSS/FreeBSD)
# bind-key -n M-[ run "mixer vol -5"
# bind-key -n M-] run "mixer vol +5"

# mpd song playback controls
bind-key -n M-\ new-window "ncmpcpp"
bind-key -n M-{ run "mpc prev"
bind-key -n M-} run "mpc next"
bind-key -n M-| run "mpc toggle"

set-option -g history-limit 100000

# Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

set -g default-terminal "screen-256color-bce"
# set -g default-command "/bin/zsh"

# active pane normal, other shaded out
setw -g window-style fg=colour240,bg=default
setw -g window-active-style fg=colour252,bg=default

setw -g pane-border-style fg=white,bg=black
setw -g pane-active-border-style fg=brightyellow,bold,bg=colour28

set -g message-style fg=yellow,bold,bg=colour19

setw -g window-status-style fg=colour253,bg=colour17
setw -g window-status-current-style fg=colour16,bold,bg=colour220
setw -g window-status-activity-style fg=colour51,bg=colour17

setw -g status-style fg=white,bright,bg=colour17

set -g status-left-length 40
set -g status-left "#[fg=brightyellow,bold,bg=colour28]#H#[fg=green,bg=colour17] [#S] "

set -g status-right-length 120
set -g status-right "#[fg=cyan]#(current-audio.sh) #[fg=white]#(tmux-mem-cpu-load --mem-mode 1 --cpu-mode 1 --graph-lines 0 --interval 2 --colors) <#(grep 'model name' /proc/cpuinfo | wc -l)> #[fg=brightyellow,bg=colour28]%Y-%m-%d#[fg=colour51,bold,bg=colour17] #[fg=brightyellow,bg=colour28]%R"

set -g status-interval 10
set -g status-justify left

set -g allow-rename off
set-option -g renumber-windows on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

# ------------
# tmux plugins
# ------------

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-mem-cpu-load'

# automatically install tmux plugin manager if it's not installed yet
#if "test ! -d ~/.tmux/plugins/tpm" \
#   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
