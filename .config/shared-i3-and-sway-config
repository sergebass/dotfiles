# Configuration common to both i3 and sway
# (included as a baseline in both WM-specific configurations)

set $audioVolumeAdjustmentPercent 1
set $audioAdvanceSeconds 10

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# Do not display borders if there's only one window showing
smart_borders on

# No need to click to change the focused container, just move the pointer
focus_follows_mouse yes

# Pressing Start+number the second time will bring us back to the original workspace
workspace_auto_back_and_forth yes

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

bar {
    status_command i3status

    mode dock
    hidden_state hide
    position bottom

    font pango:monospace 8

    # Display the bar if it is hidden by pressing this modifier
    modifier Mod4

    separator_symbol " ┃ "
}

# Toggle status bar mode between dock and hide
$bindkeys $mod+Mod1+Delete bar mode toggle

# Configure a terminal emulator
set $terminalCommand alacritty
$bindkeys $mod+Return exec $terminalCommand

# Launch GUI file manager
set $fileManagerCommand thunar
$bindkeys XF86MyComputer exec $fileManagerCommand
$bindkeys $mod+Mod1+Return exec $fileManagerCommand

# Launch default web browser and open a search page
set $browserCommand xdg-open https://duckduckgo.com
$bindkeys XF86WWW exec $browserCommand
$bindkeys $mod+Mod1+slash exec $browserCommand

# Reboot system (gracefully), also allowing to reboot while locked
set $rebootCommand systemctl reboot
$bindkeysLocked XF86Reload exec $rebootCommand
$bindkeysLocked Control+Mod1+Delete exec $rebootCommand

# Reload the configuration file
$bindkeys $mod+Shift+c reload

# Restart WM/compositor in place
$bindkeys $mod+Shift+r restart

# Kill focused window
$bindkeys $mod+Shift+q kill
$bindkeys XF86Close kill

# Display an application launcher (by their executable names), can pass argv parameters to apps
$bindkeys $mod+d exec "rofi -modes 'window,drun,run,filebrowser,ssh,keys' -show run -show-icons"

# Display a desktop/GUI application launcher (for apps shipping with .desktop files)
$bindkeys $mod+Mod1+space exec "rofi -modes 'drun,keys' -show drun -show-icons"

# Select an arbitrary window from a menu to switch to
$bindkeys $mod+Mod1+Tab exec "rofi -modes 'window,keys' -show window -show-icons"

# Dismiss the last displayed pop-up notification
$bindkeys $mod+Mod1+Backspace exec makoctl dismiss

# Implement xmonad-like next/previous window focus switching
$bindkeys $mod+Tab focus next
$bindkeys $mod+Shift+Tab focus prev

# Change focus
$bindkeys $mod+j focus left
$bindkeys $mod+k focus down
$bindkeys $mod+l focus up
$bindkeys $mod+semicolon focus right

# Alternatively, you can use the cursor keys:
$bindkeys $mod+Left focus left
$bindkeys $mod+Down focus down
$bindkeys $mod+Up focus up
$bindkeys $mod+Right focus right

# Move focused window
$bindkeys $mod+Shift+j move left
$bindkeys $mod+Shift+k move down
$bindkeys $mod+Shift+l move up
$bindkeys $mod+Shift+colon move right

# Alternatively, you can use the cursor keys:
$bindkeys $mod+Shift+Left move left
$bindkeys $mod+Shift+Down move down
$bindkeys $mod+Shift+Up move up
$bindkeys $mod+Shift+Right move right

# Move workspaces between monitors
$bindkeys $mod+Shift+period move workspace to output right
$bindkeys $mod+Shift+comma move workspace to output left

# Split in horizontal orientation
$bindkeys $mod+h split h

# Split in vertical orientation
$bindkeys $mod+v split v

# Toggle fullscreen mode for the focused container
$bindkeys $mod+f fullscreen toggle

# Toggle global fullscreen mode for the focused container (span all monitors)
$bindkeys $mod+Shift+f fullscreen toggle global

# Change container layout (stacked, tabbed, toggle split)
$bindkeys $mod+s layout stacking
$bindkeys $mod+w layout tabbed
$bindkeys $mod+e layout toggle split

# Toggle tiling / floating
$bindkeys $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
$bindkeys $mod+space focus mode_toggle

# Focus the parent container
$bindkeys $mod+a focus parent

# Focus the child container
#$bindkeys $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
$bindkeys $mod+1 workspace $ws1
$bindkeys $mod+2 workspace $ws2
$bindkeys $mod+3 workspace $ws3
$bindkeys $mod+4 workspace $ws4
$bindkeys $mod+5 workspace $ws5
$bindkeys $mod+6 workspace $ws6
$bindkeys $mod+7 workspace $ws7
$bindkeys $mod+8 workspace $ws8
$bindkeys $mod+9 workspace $ws9
$bindkeys $mod+0 workspace $ws10

# Move focused container to workspace
$bindkeys $mod+Shift+1 move container to workspace $ws1
$bindkeys $mod+Shift+2 move container to workspace $ws2
$bindkeys $mod+Shift+3 move container to workspace $ws3
$bindkeys $mod+Shift+4 move container to workspace $ws4
$bindkeys $mod+Shift+5 move container to workspace $ws5
$bindkeys $mod+Shift+6 move container to workspace $ws6
$bindkeys $mod+Shift+7 move container to workspace $ws7
$bindkeys $mod+Shift+8 move container to workspace $ws8
$bindkeys $mod+Shift+9 move container to workspace $ws9
$bindkeys $mod+Shift+0 move container to workspace $ws10

# Resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.

    $bindkeys j resize shrink width 10 px or 10 ppt
    $bindkeys k resize grow height 10 px or 10 ppt
    $bindkeys l resize shrink height 10 px or 10 ppt
    $bindkeys semicolon resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    $bindkeys Left resize shrink width 10 px or 10 ppt
    $bindkeys Down resize grow height 10 px or 10 ppt
    $bindkeys Up resize shrink height 10 px or 10 ppt
    $bindkeys Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    $bindkeys Return mode "default"
    $bindkeys Escape mode "default"
    $bindkeys $mod+r mode "default"
}

$bindkeys $mod+r mode "resize"

# Screen brightness (backlighting) controls
set $brightnessChangePercent 10
set $increaseBrightnessCommand xbacklight -inc $brightnessChangePercent
set $decreaseBrightnessCommand xbacklight -dec $brightnessChangePercent
set $resetBrightnessCommand xbacklight 100

$bindkeys XF86MonBrightnessUp exec --no-startup-id $increaseBrightnessCommand
$bindkeys $mod+Mod1+bracketright exec --no-startup-id $increaseBrightnessCommand

$bindkeys XF86MonBrightnessDown exec --no-startup-id $decreaseBrightnessCommand
$bindkeys $mod+Mod1+bracketleft exec --no-startup-id $decreaseBrightnessCommand

$bindkeys $mod+Mod1+backslash exec --no-startup-id $resetBrightnessCommand

# Touchpad controls
# $bindkeys XF86TouchpadToggle exec /some/path/toggletouchpad.sh # toggle touchpad

# The --locked option allows audio-related bindings to work even if the screen is locked

# Audio volume controls

# Increase audio volume

# PulseAudio & PipeWire:
set $raiseVolumeCommand pamixer --increase $audioVolumeAdjustmentPercent --allow-boost

# PipeWire:
# set $raiseVolumeCommand wpctl set-volume -l 1.5 @DEFAULT_AUDIO_SINK@ $audioVolumeAdjustmentPercent%+

# ALSA/Linux:
# set $raiseVolumeCommand amixer sset Master unmute $audioVolumeAdjustmentPercent%+

# OSS/FreeBSD:
# set $raiseVolumeCommand mixer vol +$audioVolumeAdjustmentPercent

$bindkeysLocked XF86AudioRaiseVolume exec --no-startup-id $raiseVolumeCommand
$bindkeysLocked $mod+Mod1+up exec --no-startup-id $raiseVolumeCommand
$bindkeysLocked $mod+bracketright exec --no-startup-id $raiseVolumeCommand

# Reduce audio volume

# PulseAudio & PipeWire:
set $lowerVolumeCommand pamixer --decrease $audioVolumeAdjustmentPercent --allow-boost

# PipeWire:
# set $lowerVolumeCommand wpctl set-volume @DEFAULT_AUDIO_SINK@ $audioVolumeAdjustmentPercent%-

# ALSA/Linux:
# set $lowerVolumeCommand amixer sset Master unmute $audioVolumeAdjustmentPercent%-

# OSS/FreeBSD:
# set $lowerVolumeCommand mixer vol -$audioVolumeAdjustmentPercent

$bindkeysLocked XF86AudioLowerVolume exec --no-startup-id $lowerVolumeCommand
$bindkeysLocked $mod+Mod1+Down exec --no-startup-id $lowerVolumeCommand
$bindkeysLocked $mod+bracketleft exec --no-startup-id $lowerVolumeCommand

# Toggle audio playback muting

# PulseAudio & PipeWire:
set $toggleMuteCommand pamixer --toggle-mute

# PipeWire:
# set $toggleMuteCommand wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

# ALSA/Linux:
# set $toggleMuteCommand amixer sset Master unmute 20%

# OSS/FreeBSD:
# set $toggleMuteCommand mixer vol 20

$bindkeysLocked XF86AudioMute exec --no-startup-id $toggleMuteCommand
$bindkeysLocked $mod+Mod1+m exec --no-startup-id $toggleMuteCommand
$bindkeysLocked $mod+backslash exec --no-startup-id $toggleMuteCommand

# Toggle microphone muting

# PulseAudio & PipeWire:
set $toggleMicMuteCommand pamixer --default-source --toggle-mute

# PipeWire:
# set $toggleMicMuteCommand wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

# ALSA/Linux:
# set $toggleMicMuteCommand

# OSS/FreeBSD:
# set $toggleMicMuteCommand

$bindkeys XF86AudioMicMute exec --no-startup-id $toggleMicMuteCommand
$bindkeys $mod+Mod1+Shift+m exec --no-startup-id $toggleMicMuteCommand

# Invoke audio mixer UI

# PulseAudio & PipeWire:
$bindkeys $mod+Mod1+v exec pavucontrol

# ALSA/Linux:
# $bindkeys $mod+Mod1+v exec $terminalCommand -e alsamixer

# OSS/FreeBSD:
# $bindkeys $mod+Mod1+v exec xmixer
# $bindkeys $mod+Mod1+v exec $terminalCommand -e aumix

# Media player control (for players supporting MPRIS)
$bindkeys XF86AudioPlay exec --no-startup-id playerctl play-pause
$bindkeys XF86AudioPause exec --no-startup-id playerctl pause
$bindkeys XF86AudioStop exec --no-startup-id playerctl stop
$bindkeys XF86AudioPrev exec --no-startup-id playerctl previous
$bindkeys XF86AudioNext exec --no-startup-id playerctl next
$bindkeys XF86AudioRewind exec --no-startup-id playerctl position $audioAdvanceSeconds-
$bindkeys XF86AudioForward exec --no-startup-id playerctl position $audioAdvanceSeconds+
